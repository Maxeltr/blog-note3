/*
 * The MIT License
 *
 * Copyright 2019 Maxim Eltratov <Maxim.Eltratov@yandex.ru>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

define(function () {
    function Map() {
        this.width = 32;
        this.height = 32;
        
        this.walls16 = [
            2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,
            0, , , , , , , , , , , , , , ,3,
            5, , , , , , , , , , , , , , ,0,
            0, , , , , , , , , , , , ,2,2,3,
            5, , , , , , , , , , , , ,2, ,0,
            0, , , , , , , , , , , , ,2, ,3,
            5, , , , , , , , , , , , ,2, ,0,
            0, , , , , , , , , , , , ,2, ,3,
            5, , , , , , , , , , , , , , ,0,
            0, , , , , , , , , , , , ,2,2,3,
            5, , , , , , , , , , , , , , ,0,
            0, , , , , , , , , , , , , , ,3,
            5, , , , , , , , , , , , , , ,0,
            0, , , , , , , , , , , , , , ,3,
            5, , , , , , , , , , , , , , ,0,
            0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1
        ];
        
        this.walls = [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0, , , , , , , , , , ,1, , , , , , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , ,1, , , ,1, , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , ,1, , , ,1, , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , , , , , , , , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , ,1, , , ,1, , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , ,1, , , ,1, , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , ,1, , , ,1, , ,1,1,1,1,1,1, ,3,3,3, , , ,0,
            0, , , , , , , , , , , , , , ,1, , , , , , , , , , , , , , , ,0,
            0, , , , , , , ,1,1,1,1, , , ,1, , , , , , , ,1,1,1,1,1, , , ,0,
            0,1,1,1,1,1, , , , , , , , , , , , , , , ,1, , , , , ,1, , , ,0,
            0, , , , , , ,1, , , , , , , , , , , , , ,1, , , , , ,1, , , ,0,
            0, , , , , , ,1, , , , , , , , , , , , , ,1, , , , , ,1, , , ,0,
            0, , , , , , ,1,1,1,1,1, , , , , , , , , , ,1,1,1,1,1,1, , , ,0,
            0, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,
            0, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,
            0, ,2,2,2,2,2,2,2,2,2,2, ,2,2,2,2,2,2,2,2,2,2, ,2,2,2,2,2, , ,0,
            0, , , , , , , , , , ,2, , , , , , , , , , , , , , , , , , , ,0,
            0,3,3,3,3,3,3,3, , , ,2, , , , , , , , , , , , , , , , , , , ,0,
            0, , , , , , ,3, , , ,2, , , , , , , , , , , , , , , ,3, , , ,0,
            0, , , , , , , , , , , , , , , , , , , , , , , , , , ,3, , , ,0,
            0, , , , , , ,3, , , ,3, , , ,3, , , , , , , , , , , ,3, , , ,0,
            0, , , , , , ,3, , , ,3, , , ,3, , , , , , , , , , , ,3, , , ,0,
            0, ,3,3,3,3,3,3, ,3,3,3, , , ,3, , ,3,3,3,3,3,3,3,3,3,3, , , ,0,
            0, , , , , , ,3, , , , , , , ,3, , , , , , , , , , , , , , , ,0,
            0, , , , , , ,3,3,3,3,3, , , ,3, , , , , , , ,3,3,3,3,3, , , ,0,
            0,2,2,2,2,2, , , , , , , , , , ,3,3,3, , ,3, , , , , ,3, , , ,0,
            0, , , , ,2, , , , , , , , , , ,3, , , , ,3, , , , , ,3, , , ,0,
            0, , , , ,2, , , , , , , , , , ,3, , , , ,3, , , , , , , , , ,0,
            0, , , , ,2, , , , , , , , , , , , , , , , , ,3,3,3,3,3, , , ,0,
            0, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            
        ];
        
        this.walls64 = [
            2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,
            0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,
            5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,
            0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,
            5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,
            0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,
            5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,
            0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,
            5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,
            0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,
            5,0,0,0,0,0, , , , , ,0, , , , ,5,0,0, ,0,0, , , , , ,0, , , ,0,5,0,0,0,0,0, , , , , ,0, , , , ,5,0,0, ,0,0, , , , , ,0, , , ,0,
            0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            5, , , , ,0, ,0, , , , , , , , ,5, , , , ,0, , , , , , , , , ,0,5, , , , ,0, ,0, , , , , , , , ,5, , , , ,0, , , , , , , , , ,0,
            0, , , , , , ,0,0,0,0,0, , , , , , , , , , , ,0,0,0,0,0, , , ,3,0, , , , , , ,0,0,0,0,0, , , , , , , , , , , ,0,0,0,0,0, , , ,3,
            5, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,5, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,
            0, ,0,1, ,1,0,1, ,1,0,1, ,1, ,1,1, ,1,0, ,0,1, ,1,0, ,0,1, , ,0,0, ,0,1, ,1,0,1, ,1,0,1, ,1, ,1,1, ,1,0, ,0,1, ,1,0, ,0,1, , ,0,
            2, ,4,0, ,0,4,0, ,0,4,0, ,0, ,0,2, ,4,0, ,0,4, ,4,0, ,0,4, , ,0,2, ,4,0, ,0,4,0, ,0,4,0, ,0, ,0,2, ,4,0, ,0,4, ,4,0, ,0,4, , ,0,
            0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,
            5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,
            0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,
            5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,
            0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,
            5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,
            0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,
            5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,
            0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,
            5,0,0,0,0,0, , , , , ,0, , , , ,5,0,0, ,0,0, , , , , ,0, , , ,0,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            5, , , , ,0, ,0, , , , , , , , ,5, , , , ,0, , , , , , , , , ,0,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            0, , , , , , ,0,0,0,0,0, , , , , , , , , , , ,0,0,0,0,0, , , ,3,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            5, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
            2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,2,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,
            0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,
            5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,
            0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,
            5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,
            0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,
            5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,
            0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,
            5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,
            0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,
            5,0,0,0,0,0, , , , , ,0, , , , ,5,0,0, ,0,0, , , , , ,0, , , ,0,5,0,0,0,0,0, , , , , ,0, , , , ,5,0,0, ,0,0, , , , , ,0, , , ,0,
            0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            5, , , , ,0, ,0, , , , , , , , ,5, , , , ,0, , , , , , , , , ,0,5, , , , ,0, ,0, , , , , , , , ,5, , , , ,0, , , , , , , , , ,0,
            0, , , , , , ,0,0,0,0,0, , , , , , , , , , , ,0,0,0,0,0, , , ,3,0, , , , , , ,0,0,0,0,0, , , , , , , , , , , ,0,0,0,0,0, , , ,3,
            5, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,5, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,
            0, ,0,1, ,1,0,1, ,1,0,1, ,1, ,1,1, ,1,0, ,0,1, ,1,0, ,0,1, , ,0,0, ,0,1, ,1,0,1, ,1,0,1, ,1, ,1,1, ,1,0, ,0,1, ,1,0, ,0,1, , ,0,
            2, ,4,0, ,0,4,0, ,0,4,0, ,0, ,0,2, ,4,0, ,0,4, ,4,0, ,0,4, , ,0,2, ,4,0, ,0,4,0, ,0,4,0, ,0, ,0,2, ,4,0, ,0,4, ,4,0, ,0,4, , ,0,
            0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,0, , , , , , , , , , ,0, , , , , , , , , , , , , , , ,0, , , ,3,
            5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,5, ,0,0,0,0,0,0, , , ,0, , , ,0, , ,0,0,0,0, ,0, , , ,0, , , ,0,
            0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,0, , , , , , ,0, , , ,0, ,2,2,3, , , , , , , , , , , ,0, ,2, ,3,
            5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,5, , , , , , , , , , , , , , , , , , , , , , ,0, , , ,0, ,2, ,0,
            0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,0, ,0, , , , ,0, , , ,0, ,2, ,3, , ,0, , , , ,0, , , ,0, , , ,3,
            5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,5, , ,0, ,0, ,0, , , ,0, ,2, ,0, , , ,0, ,0, , , , , ,0, ,2, ,0,
            0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,0, ,0,0,0,0,0,0, ,0,0,0, ,2, ,3, , ,0,0,0,0,0,0, ,0,0,0, ,2, ,3,
            5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,5, , , , , , ,0, , , , , , , ,0, , , , , , , , , , , , , , , ,0,
            0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,0, , , , , , ,0,0,0,0,0, ,2,2,3, , , , , , , ,0,0,0,0,0, ,2, ,3,
            5,0,0,0,0,0, , , , , ,0, , , , ,5,0,0, ,0,0, , , , , ,0, , , ,0,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            5, , , , ,0, ,0, , , , , , , , ,5, , , , ,0, , , , , , , , , ,0,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            0, , , , , , ,0,0,0,0,0, , , , , , , , , , , ,0,0,0,0,0, , , ,3,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            5, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,0,0, , , , ,0, ,0, ,0,0,0, , , , ,0, , , , ,0, ,0, ,0,0,0, , , ,3,
            0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0
        ];
    }

    Map.prototype.isEmptyCell = function (x, y) {
        return this.walls[Math.floor(x) + Math.floor(y) * this.width] === undefined;
    };

    Map.prototype.castRay = function (x, y, angle, step, saveTrace) {
        let textureId, cx, cy, steps;
        let increment = step || 0.01;
        let trace = [];

        for (steps = 0; steps < 20; steps += increment) {                                               //step of the ray
            cx = x + steps * Math.cos(angle);                                                    //x coordinate of ray
            cy = y + steps * Math.sin(angle);                                                    //y coordinate of ray
            if (saveTrace) {
                trace.push({x: cx, y: cy});
            }
            textureId = this.walls[Math.floor(cx) + Math.floor(cy) * this.width];
            if (textureId !== undefined)
                break;
        }

        return {x: cx, y: cy, distance: steps, barrier: textureId, trace: trace};
    };

    return {
	create: function() {
            return new Map();
        }
    };
});

